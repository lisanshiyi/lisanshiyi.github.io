(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{308:function(s,a,t){"use strict";t.r(a);var e=t(7),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"算法原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法原理"}},[s._v("#")]),s._v(" 算法原理")]),s._v(" "),a("ul",[a("li",[s._v("CRC检验原理实际上就是在一个p位二进制数据序列之后附加一个r位二进制检验码(序列)，从而构成一个总长为n＝p＋r位的二进制序列；附加在数据序列之后的这个检验码与数据序列的内容之间存在着某种特定的关系。如果因干扰等原因使数据序列中的某一位或某些位发生错误，这种特定关系就会被破坏。因此，通过检查这一关系，就可以实现对数据正确性的检验")]),s._v(" "),a("li",[s._v("注：仅用循环冗余检验 CRC 差错检测技术只能做到无差错接受（只是非常近似的认为是无差错的），并不能保证可靠传输")])]),s._v(" "),a("h3",{attrs:{id:"java实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java实现"}},[s._v("#")]),s._v(" Java实现")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('  import java.util.zip.CRC32;\n\n  String feed_id = "6588328477069149185";\n  CRC32 crc32 = new CRC32();\n  crc32.update(feed_id.getBytes());\n  System.out.println(crc32.getValue());\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  Print: 3437526013\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"python2实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python2实现"}},[s._v("#")]),s._v(" Python2实现")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('  # -*- coding:utf-8 -*-\n  import zlib\n\n  if __name__ == "__main__":\n      feed_id = "6588328477069149185"\n      print zlib.crc32(feed_id) & 0xffffffff\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  Print: 3437526013\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"python3实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python3实现"}},[s._v("#")]),s._v(" Python3实现")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('  import zlib\n\n  if __name__ == "__main__":\n      feed_id = "6588328477069149185"\n      print(zlib.crc32(feed_id.encode(\'utf8\')))\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  Print: 3437526013\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"golang实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#golang实现"}},[s._v("#")]),s._v(" Golang实现")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('  import (\n     "fmt"\n     "hash/crc32"\n  )\n\n  func main()  {\n     feed_id := "6588328477069149185"\n     fmt.Println(crc32.ChecksumIEEE([]byte(feed_id)))\n  }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  Print: 3437526013\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"分库分表机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分库分表机制"}},[s._v("#")]),s._v(" 分库分表机制")]),s._v(" "),a("ul",[a("li",[s._v("业务表结构如下：")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("字段名")]),s._v(" "),a("th",[s._v("类型")]),s._v(" "),a("th",[s._v("备注")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("id")]),s._v(" "),a("td",[s._v("Long")]),s._v(" "),a("td",[s._v("自增ID")])])])]),s._v(" "),a("ul",[a("li",[s._v("常规分库分表做法：对id取模，具体如下：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  def shard_hash(self, id, mod) {\n      return int(id % mod)\n  }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("为了使数据分配更平均，可以使用crc32算法得到一个大数，然后再取模")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  def shard_hash(self, id, mod) {\n      return int(crc32(id) % mod)\n  }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("这种分表方式在客户端实现，简单便捷，但需要侵入业务代码不够友好")])]),s._v(" "),a("h3",{attrs:{id:"附录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[s._v("#")]),s._v(" 附录")]),s._v(" "),a("ul",[a("li",[s._v("参考1：https://blog.csdn.net/Android_Mnbvcxz/article/details/78902737")]),s._v(" "),a("li",[s._v("参考2：https://neatlifecoco.com/15623795123706.html")])])])}),[],!1,null,null,null);a.default=n.exports}}]);